// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// fide
List fide(CharacterVector teams, std::vector<int> rank, NumericVector r, int K, double init_r, double init_rd);
RcppExport SEXP sport_fide(SEXP teamsSEXP, SEXP rankSEXP, SEXP rSEXP, SEXP KSEXP, SEXP init_rSEXP, SEXP init_rdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type teams(teamsSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type rank(rankSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type init_r(init_rSEXP);
    Rcpp::traits::input_parameter< double >::type init_rd(init_rdSEXP);
    rcpp_result_gen = Rcpp::wrap(fide(teams, rank, r, K, init_r, init_rd));
    return rcpp_result_gen;
END_RCPP
}
// glicko
List glicko(CharacterVector teams, std::vector<int> rank, NumericVector r, NumericVector rd, NumericVector days, double init_r, double init_rd);
RcppExport SEXP sport_glicko(SEXP teamsSEXP, SEXP rankSEXP, SEXP rSEXP, SEXP rdSEXP, SEXP daysSEXP, SEXP init_rSEXP, SEXP init_rdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type teams(teamsSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type rank(rankSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rd(rdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type days(daysSEXP);
    Rcpp::traits::input_parameter< double >::type init_r(init_rSEXP);
    Rcpp::traits::input_parameter< double >::type init_rd(init_rdSEXP);
    rcpp_result_gen = Rcpp::wrap(glicko(teams, rank, r, rd, days, init_r, init_rd));
    return rcpp_result_gen;
END_RCPP
}
// glicko2
List glicko2(CharacterVector teams, std::vector<int> rank, NumericVector r, NumericVector rd, NumericVector sig, NumericVector days, double tau, double init_r, double init_rd);
RcppExport SEXP sport_glicko2(SEXP teamsSEXP, SEXP rankSEXP, SEXP rSEXP, SEXP rdSEXP, SEXP sigSEXP, SEXP daysSEXP, SEXP tauSEXP, SEXP init_rSEXP, SEXP init_rdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type teams(teamsSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type rank(rankSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rd(rdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type days(daysSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type init_r(init_rSEXP);
    Rcpp::traits::input_parameter< double >::type init_rd(init_rdSEXP);
    rcpp_result_gen = Rcpp::wrap(glicko2(teams, rank, r, rd, sig, days, tau, init_r, init_rd));
    return rcpp_result_gen;
END_RCPP
}
// harkness
List harkness(Rcpp::StringVector teams, std::vector<int> rank, std::vector<int> days, std::vector<double> r, std::vector<double> rd, double init_r, double init_rd);
RcppExport SEXP sport_harkness(SEXP teamsSEXP, SEXP rankSEXP, SEXP daysSEXP, SEXP rSEXP, SEXP rdSEXP, SEXP init_rSEXP, SEXP init_rdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type teams(teamsSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type rank(rankSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type days(daysSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type r(rSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type rd(rdSEXP);
    Rcpp::traits::input_parameter< double >::type init_r(init_rSEXP);
    Rcpp::traits::input_parameter< double >::type init_rd(init_rdSEXP);
    rcpp_result_gen = Rcpp::wrap(harkness(teams, rank, days, r, rd, init_r, init_rd));
    return rcpp_result_gen;
END_RCPP
}
// pointsCalc
NumericVector pointsCalc(NumericVector event_id, CharacterVector team_name, NumericVector score);
RcppExport SEXP sport_pointsCalc(SEXP event_idSEXP, SEXP team_nameSEXP, SEXP scoreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type event_id(event_idSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type team_name(team_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type score(scoreSEXP);
    rcpp_result_gen = Rcpp::wrap(pointsCalc(event_id, team_name, score));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP sport_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// streakLength
NumericVector streakLength(NumericVector vec);
RcppExport SEXP sport_streakLength(SEXP vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    rcpp_result_gen = Rcpp::wrap(streakLength(vec));
    return rcpp_result_gen;
END_RCPP
}
