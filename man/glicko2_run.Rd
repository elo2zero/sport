% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rating_run.R
\name{glicko2_run}
\alias{glicko2_run}
\title{Glicko2 rating algorithm}
\usage{
glicko2_run(
  formula,
  data,
  r = numeric(0),
  rd = numeric(0),
  sigma = numeric(0),
  lambda = NULL,
  share = NULL,
  weight = NULL,
  init_r = 1500,
  init_rd = 350,
  init_sigma = 0.05,
  kappa = 0.5,
  tau = 0.5
)
}
\arguments{
\item{formula}{formula which specifies the model. RHS Allows only player 
rating parameter and it should be specified in following manner:

`rank | id ~ team(name)`.
\itemize{
  \item {rank} player position in event.
  \item {id} event identifier in which pairwise comparison is assessed.
  \item {team(name)} name of the contestant. In this case \code{team(name)} 
    helps algorithm point name of the column where player names are stored.
}
Users can also specify formula in in different way:
 `rank | id ~ team(name|team)`. Which means that players are playing in teams, 
 and results are observed for teams not for players. For more see vignette.}

\item{data}{data.frame which contains columns specified in formula, and
optionaly columns defined by `lambda`, `weight`.}

\item{r}{named vector of initial players ratings estimates. If not specified 
then `r` will be created automatically for parameters specified in `formula`
with initial value `init_r`.}

\item{rd}{rd named vector of initial rating deviation estimates. If not specified 
then `rd` will be created automatically for parameters specified in `formula`
with initial value `init_rd`.}

\item{sigma}{(only for glicko2) named vector of initial players ratings 
estimates. If not specified then `sigma` will be created automatically for 
parameters specified in `formula` with initial value `init_sigma`.}

\item{lambda}{name of the column in `data` containing lambda values or one 
constant value (eg. `lambda = colname` or `lambda = 0.5`).
Lambda impact prior variance, and uncertainty of the matchup result. The 
higher lambda, the higher prior variance and more uncertain result of the 
matchup. Higher lambda flattens chances of winning.}

\item{share}{name of the column in `data` containing player share in team 
efforts. It's used to first calculate combined rating of the team and
then redistribute ratings update back to players level. Warning - it should
be used only if formula is specified with players nested within teams (`team(player|team)`).}

\item{weight}{name of the column in `data` containing weights values or
one constant (eg. `weight = colname` or `weight = 0.5`). 
Weights increasing (weight > 1) or decreasing (weight < 1) update change. 
Higher weight increasing impact of event result on rating estimate.}

\item{init_r}{initial values for `r` if not provided. 
Default (`glicko = 1500`, `glicko2 = 1500`, `bbt = 25`, `dbl = 0`)}

\item{init_rd}{initial values for `r` if not provided. 
Default (`glicko = 350`, `glicko2 = 350`, `bbt = 25/3`, `dbl = 1`)}

\item{kappa}{controls `rd` shrinkage not to be greater than `rd*(1 - kappa)`.
`kappa=1` means that `rd` will not be decreased.}

\item{tau}{The system constant. Which constrains the change in volatility over
 time. Reasonable choices are between 0.3 and 1.2 (`default = 0.5`), though 
 the system should be tested to decide which value results in greatest 
 predictive accuracy. Smaller values of `tau` prevent the volatility measures 
 from changing by largeamounts, which in turn prevent enormous changes in 
 ratings based on very improbable results. If the application of Glicko-2 is 
 expected to involve extremely improbable collections of game outcomes, then 
 `tau` should be set to a small value, even as small as, say, `tau= 0`.
A "rating" object is returned}
}
\value{
A "rating" object is returned: \itemize{
\item \code{final_r} named vector containing players ratings.

\item \code{final_rd} named vector containing players ratings deviations.

\item \code{final_sigma} named vector containing players ratings volatiles.

\item \code{r} data.frame with evolution of the ratings and ratings deviations
 estimated at each event.
 
\item \code{pairs} pairwise combinations of players in analysed events with 
prior probability and result of a challange.

\item \code{class} of the object.

\item \code{method} type of algorithm used.

\item \code{...} arguments specified in function call.
}
}
\description{
Glicko2 rating algorithm
}
\examples{
# the simplest example
data <- data.frame(
  name = c("A", "B", "C", "D"),
  rank = c(3, 4, 1, 2)
)
glicko2 <- glicko_run(
  data = data, 
  formula = rank ~ name
 )

# Example from Glickman
glicko2 <- glicko2_run(
  data = data, 
  formula = rank ~ name,
   r = setNames(c(1500.0, 1400.0, 1550.0, 1700.0), c("A", "B", "C", "D")),
   rd = setNames(c(200.0, 30.0, 100.0, 300.0), c("A", "B", "C", "D"))
  )
}
