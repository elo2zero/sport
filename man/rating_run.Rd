% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rating_run.R
\name{rating_run}
\alias{rating_run}
\title{Apply rating algorithm}
\usage{
rating_run(
  method,
  data,
  formula,
  r = numeric(0),
  rd = numeric(0),
  sigma = numeric(0),
  init_r = numeric(0),
  init_rd = numeric(0),
  init_sigma = numeric(0),
  share = numeric(0),
  weight = numeric(0),
  lambda = numeric(0),
  kappa = numeric(0),
  tau = numeric(0)
)
}
\arguments{
\item{data}{data.frame which contains columns specified in formula, and
optionaly columns defined by `lambda`, `weight`.}

\item{formula}{formula which specifies the model. RHS Allows only player 
rating parameter and it should be specified in following manner:

`rank | id ~ team(name)`.
\itemize{
  \item {rank} player position in event.
  \item {id} event identifier in which pairwise comparison is assessed.
  \item {team(name)} name of the contestant. In this case \code{team(name)} 
    helps algorithm point name of the column where player names are stored.
}
Users can also specify formula in in different way:
 `rank | id ~ team(name|team)`. Which means that players are playing in teams, 
 and results are observed for teams not for players. For more see vignette.}

\item{r}{named vector of initial players ratings estimates. If not specified 
then `r` will be created automatically for parameters specified in `formula`
with initial value `init_r`.}

\item{rd}{rd named vector of initial rating deviation estimates. If not specified 
then `rd` will be created automatically for parameters specified in `formula`
with initial value `init_rd`.}

\item{init_r}{initial values for `r` if not provided. 
Default (`glicko = 1500`, `glicko2 = 1500`, `bbt = 25`, `dbl = 0`)}

\item{init_rd}{initial values for `r` if not provided. 
Default (`glicko = 350`, `glicko2 = 350`, `bbt = 25/3`, `dbl = 1`)}

\item{share}{name of the column in `data` containing player share in team 
efforts. It's used to first calculate combined rating of the team and
then redistribute ratings update back to players level. Warning - it should
be used only if formula is specified with players nested within teams (`team(player|team)`).}

\item{weight}{name of the column in `data` containing weights values or
one constant (eg. `weight = colname` or `weight = 0.5`). 
Weights increasing (weight > 1) or decreasing (weight < 1) update change. 
Higher weight increasing impact of event result on rating estimate.}

\item{lambda}{name of the column in `data` containing lambda values or one 
constant value (eg. `lambda = colname` or `lambda = 0.5`).
Lambda impact prior variance, and uncertainty of the matchup result. The 
higher lambda, the higher prior variance and more uncertain result of the 
matchup. Higher lambda flattens chances of winning.}

\item{kappa}{controls `rd` shrinkage not to be greater than `rd*(1 - kappa)`.
`kappa=1` means that `rd` will not be decreased.}

\item{idlab}{name of column in `data` containing date. Doesn't affect
estimation process. If specified, charts displays estimates changes in time
 instead of by observation `id`.}
}
\description{
Apply rating algorithm
}
